{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "YouTrack REST API",
    "description" : "YouTrack issue tracking and project management system",
    "license" : {
      "name" : "YouTrack license",
      "url" : "https://www.jetbrains.com/youtrack/buy/license.html"
    },
    "version" : "2021.3"
  },
  "servers" : [ {
    "url" : "https://youtrack.jetbrains.com:443/api"
  } ],
  "security" : [ {
    "permanentToken" : [ ]
  } ],
  "paths" : {
    "/activities" : {
      "description" : "This resource provides access to the activities with the possibility to filter them by various parameters.",
      "get" : {
        "parameters" : [ {
          "name" : "categories",
          "in" : "query",
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reverse",
          "in" : "query",
          "description" : "Indicates whether the order of returning activities is from newest to oldest or the opposite.\nIf \"false\", then the oldest activity item that matches a selected filter is returned first.\nIf \"true\", then the newest activity is returned first. By default, \"false\".",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered to be 0.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered as Long.MAX_VALUE.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "Parameter to filter activities by the author. The database id or login, or Hub id,\nor 'me' for the current logged in user could be specified.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueQuery",
          "in" : "query",
          "description" : "Issues search query. Read more about <a href=\"Search-and-Command-Attributes.xml\">search syntax</a>.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,added,author($type,id,login,name,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of ActivityItem",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ActivityItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activities/{id}" : {
      "description" : "This resource provides access to the activities with the possibility to filter them by various parameters.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,added,author($type,id,login,name,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single ActivityItem",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityItem"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/activitiesPage" : {
      "description" : "This resource provides access to the any activities wrapping it to the page object.\nThe main advantage of the page in comparision to a list of activities is cursors.\nThe page provides boundary marks that allows continuing iteration over the activities from the place\nthe page is finished.",
      "get" : {
        "parameters" : [ {
          "name" : "categories",
          "in" : "query",
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reverse",
          "in" : "query",
          "description" : "Indicates whether the order of returning activities is from newest to oldest or the opposite.\nIf \"false\", then the oldest activity item that matches a selected filter is returned first.\nIf \"true\", then the newest activity is returned first. By default, \"false\".",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered to be 0.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered as Long.MAX_VALUE.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "Parameter to filter activities by the author. The database id or login, or Hub id,\nor 'me' for the current logged in user could be specified.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueQuery",
          "in" : "query",
          "description" : "Issues search query. Read more about <a href=\"Search-and-Command-Attributes.xml\">search syntax</a>.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cursor",
          "in" : "query",
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityId",
          "in" : "query",
          "description" : "ID of the activity that should be included in the page. The activity is allocated to the middle of the page.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,activities($type,added,author($type,id,login,name,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp),afterCursor,beforeCursor,hasAfter,hasBefore,id"
        } ],
        "responses" : {
          "200" : {
            "description" : "single ActivityCursorPage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityCursorPage"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/build" : {
      "description" : "This resource provides operations with sets of builds.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of BuildBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BuildBundle"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single BuildBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBundle"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/build/{id}" : {
      "description" : "This resource provides operations with sets of builds.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single BuildBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBundle"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single BuildBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBundle"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/bundles/build/{id}/values" : {
      "description" : "This resource lets you work with the values in a specific set of builds (build bundle).",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,assembleDate,color($type,background,foreground,id),id,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of BuildBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BuildBundleElement"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,assembleDate,color($type,background,foreground,id),id,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildBundleElement"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single BuildBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBundleElement"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/build/{id}/values/{buildBundleElementId}" : {
      "description" : "This resource lets you work with the values in a specific set of builds (build bundle).",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,assembleDate,color($type,background,foreground,id),id,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "buildBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single BuildBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBundleElement"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,assembleDate,color($type,background,foreground,id),id,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "buildBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildBundleElement"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single BuildBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBundleElement"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "buildBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "buildBundleElementId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/bundles/enum" : {
      "description" : "This resource lets you work with a set of values of the `enum` type.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of EnumBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EnumBundle"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnumBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single EnumBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnumBundle"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/enum/{id}" : {
      "description" : "This resource lets you work with a set of values of the `enum` type.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single EnumBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnumBundle"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnumBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single EnumBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnumBundle"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/bundles/enum/{id}/values" : {
      "description" : "This resource lets you work with the values in a specific set of enumerated values (enum bundle).",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,color($type,background,foreground,id),id,localizedName,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of EnumBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EnumBundleElement"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,color($type,background,foreground,id),id,localizedName,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnumBundleElement"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single EnumBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnumBundleElement"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/enum/{id}/values/{enumBundleElementId}" : {
      "description" : "This resource lets you work with the values in a specific set of enumerated values (enum bundle).",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,color($type,background,foreground,id),id,localizedName,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enumBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single EnumBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnumBundleElement"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,color($type,background,foreground,id),id,localizedName,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enumBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnumBundleElement"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single EnumBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnumBundleElement"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enumBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "enumBundleElementId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/bundles/ownedField" : {
      "description" : "This resource provides operations with owned field bundles.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of OwnedBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OwnedBundle"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OwnedBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single OwnedBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OwnedBundle"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/ownedField/{id}" : {
      "description" : "This resource provides operations with owned field bundles.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single OwnedBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OwnedBundle"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OwnedBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single OwnedBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OwnedBundle"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/bundles/ownedField/{id}/values" : {
      "description" : "This resource lets you work with the values in a specific set of owned values (owned bundle).",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,color($type,background,foreground,id),id,name,ordinal,owner($type,id,login,name,ringId)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of OwnedBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/OwnedBundleElement"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,color($type,background,foreground,id),id,name,ordinal,owner($type,id,login,name,ringId)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OwnedBundleElement"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single OwnedBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OwnedBundleElement"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/ownedField/{id}/values/{ownedBundleElementId}" : {
      "description" : "This resource lets you work with the values in a specific set of owned values (owned bundle).",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,color($type,background,foreground,id),id,name,ordinal,owner($type,id,login,name,ringId)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ownedBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single OwnedBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OwnedBundleElement"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,color($type,background,foreground,id),id,name,ordinal,owner($type,id,login,name,ringId)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ownedBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OwnedBundleElement"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single OwnedBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OwnedBundleElement"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ownedBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "ownedBundleElementId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/bundles/state" : {
      "description" : "This resource provides operations with sets of values of the `state` type.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of StateBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StateBundle"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single StateBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StateBundle"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/state/{id}" : {
      "description" : "This resource provides operations with sets of values of the `state` type.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single StateBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StateBundle"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single StateBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StateBundle"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/bundles/state/{id}/values" : {
      "description" : "This resource lets you work with the values in a specific set of states (state bundle).",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,color($type,background,foreground,id),id,isResolved,localizedName,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of StateBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/StateBundleElement"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,color($type,background,foreground,id),id,isResolved,localizedName,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateBundleElement"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single StateBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StateBundleElement"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/state/{id}/values/{stateBundleElementId}" : {
      "description" : "This resource lets you work with the values in a specific set of states (state bundle).",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,color($type,background,foreground,id),id,isResolved,localizedName,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "stateBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single StateBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StateBundleElement"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,color($type,background,foreground,id),id,isResolved,localizedName,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "stateBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StateBundleElement"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single StateBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StateBundleElement"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "stateBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "stateBundleElementId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/bundles/user" : {
      "description" : "This resource lets you work with the sets of users in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of UserBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserBundle"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single UserBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserBundle"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/user/{id}" : {
      "description" : "This resource lets you work with the sets of users in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single UserBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserBundle"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single UserBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserBundle"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/bundles/user/{id}/aggregatedUsers" : {
      "description" : "This resource lets you read the list of all users that the specific bundle contains, both that were added as members of groups and individually.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,banned,email,fullName,guest,id,login,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/user/{id}/aggregatedUsers/{userId}" : {
      "description" : "This resource lets you read the list of all users that the specific bundle contains, both that were added as members of groups and individually.",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/bundles/user/{id}/groups" : {
      "description" : "This resource lets you work with the user groups that are added to the specific set of users.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allUsersGroup,id,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of UserGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allUsersGroup,id,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single UserGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/user/{id}/groups/{userGroupId}" : {
      "description" : "This resource lets you work with the user groups that are added to the specific set of users.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allUsersGroup,id,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single UserGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "userGroupId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/bundles/user/{id}/individuals" : {
      "description" : "This resource lets you work with the user accounts that were added individually to a specific set of users (user bundle).",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,banned,email,fullName,guest,id,login,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,banned,email,fullName,guest,id,login,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/user/{id}/individuals/{userId}" : {
      "description" : "This resource lets you work with the user accounts that were added individually to a specific set of users (user bundle).",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,banned,email,fullName,guest,id,login,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/bundles/version" : {
      "description" : "This resource provides operations with version bundles.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of VersionBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VersionBundle"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VersionBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single VersionBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionBundle"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/version/{id}" : {
      "description" : "This resource provides operations with version bundles.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single VersionBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionBundle"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VersionBundle"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single VersionBundle",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionBundle"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/bundles/version/{id}/values" : {
      "description" : "This resource lets you work with the version values in a specific set of versions (version bundle).",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,color($type,background,foreground,id),id,name,ordinal,releaseDate,released"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of VersionBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VersionBundleElement"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,color($type,background,foreground,id),id,name,ordinal,releaseDate,released"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VersionBundleElement"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single VersionBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionBundleElement"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/bundles/version/{id}/values/{versionBundleElementId}" : {
      "description" : "This resource lets you work with the version values in a specific set of versions (version bundle).",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,color($type,background,foreground,id),id,name,ordinal,releaseDate,released"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single VersionBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionBundleElement"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,color($type,background,foreground,id),id,name,ordinal,releaseDate,released"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VersionBundleElement"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single VersionBundleElement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionBundleElement"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "versionBundleElementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "versionBundleElementId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/customFields" : {
      "description" : "This resource lets you work with the custom fields. In the old REST API we called them \"prototypes\".",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of CustomField",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CustomField"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomField"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single CustomField",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomField"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/customFields/{id}" : {
      "description" : "This resource lets you work with the custom fields. In the old REST API we called them \"prototypes\".",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single CustomField",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomField"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,fieldType($type,id),id,isAutoAttached,isUpdateable,localizedName,name,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomField"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single CustomField",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomField"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/customFields/{id}/fieldDefaults" : {
      "description" : "This resource lets you read and update default settings of a custom field in a project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,id,isPublic"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single CustomFieldDefaults",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomFieldDefaults"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,id,isPublic"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomFieldDefaults"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single CustomFieldDefaults",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomFieldDefaults"
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/customFields/{id}/instances" : {
      "description" : "This resource lets you read a so called instances of the custom fields - settings of the custom field in each project that uses it.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of ProjectCustomField",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProjectCustomField"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/customFields/{id}/instances/{projectCustomFieldId}" : {
      "description" : "This resource lets you read a so called instances of the custom fields - settings of the custom field in each project that uses it.",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "projectCustomFieldId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/customFieldSettings/types" : {
      "description" : "This resource lets you read the list of supported types of custom fields in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of FieldType",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FieldType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/customFieldSettings/types/{id}" : {
      "description" : "This resource lets you read the list of supported types of custom fields in YouTrack.",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/databaseBackup/backups" : {
      "description" : "This resource lets you access the database backup files. The user account that performs the operation\nmust have <emphasis>Low-level Read Administration</emphasis> permissions.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,creationDate,id,link,name,size"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of BackupFile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BackupFile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/databaseBackup/backups/{id}" : {
      "description" : "This resource lets you access the database backup files. The user account that performs the operation\nmust have <emphasis>Low-level Read Administration</emphasis> permissions.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,creationDate,id,link,name,size"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single BackupFile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupFile"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/databaseBackup/settings" : {
      "description" : "This resource lets you configure settings of the database backup.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,availableDiskSpace,backupStatus($type,backupCancelled,backupError($type,date,errorMessage,id),backupInProgress,id),id,isOn,location"
        } ],
        "responses" : {
          "200" : {
            "description" : "single DatabaseBackupSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatabaseBackupSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,availableDiskSpace,backupStatus($type,backupCancelled,backupError($type,date,errorMessage,id),backupInProgress,id),id,isOn,location"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DatabaseBackupSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single DatabaseBackupSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatabaseBackupSettings"
                }
              }
            }
          }
        }
      }
    },
    "/admin/databaseBackup/settings/backupStatus" : {
      "description" : "This resource lets you get the status of the back up process.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,backupCancelled,backupError($type,date,errorMessage,id),backupInProgress,id"
        } ],
        "responses" : {
          "200" : {
            "description" : "single BackupStatus",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BackupStatus"
                }
              }
            }
          }
        }
      }
    },
    "/admin/globalSettings" : {
      "description" : "Provides operations with global application settings.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,appearanceSettings($type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)),id,license($type,error,id,license,username),localeSettings($type,id,isRTL,locale($type,community,id,language,locale,name)),notificationSettings($type,emailSettings($type,id,isEnabled),id,jabberSettings($type,id,isEnabled)),restSettings($type,allowAllOrigins,allowedOrigins,id),systemSettings($type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize)"
        } ],
        "responses" : {
          "200" : {
            "description" : "single GlobalSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GlobalSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,appearanceSettings($type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)),id,license($type,error,id,license,username),localeSettings($type,id,isRTL,locale($type,community,id,language,locale,name)),notificationSettings($type,emailSettings($type,id,isEnabled),id,jabberSettings($type,id,isEnabled)),restSettings($type,allowAllOrigins,allowedOrigins,id),systemSettings($type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize)"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GlobalSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single GlobalSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GlobalSettings"
                }
              }
            }
          }
        }
      }
    },
    "/admin/globalSettings/appearanceSettings" : {
      "description" : "This resource lets you work with the Visual settings of your YouTrack service.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)"
        } ],
        "responses" : {
          "200" : {
            "description" : "single AppearanceSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppearanceSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,timeZone($type,id,offset,presentation)"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppearanceSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single AppearanceSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppearanceSettings"
                }
              }
            }
          }
        }
      }
    },
    "/admin/globalSettings/license" : {
      "description" : "This resource lets you work with the license of your YouTrack service.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,error,id,license,username"
        } ],
        "responses" : {
          "200" : {
            "description" : "single License",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,error,id,license,username"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single License",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License"
                }
              }
            }
          }
        }
      }
    },
    "/admin/globalSettings/localeSettings" : {
      "description" : "This resource lets you work with the system language settings of your YouTrack service.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,isRTL,locale($type,community,id,language,locale,name)"
        } ],
        "responses" : {
          "200" : {
            "description" : "single LocaleSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocaleSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,isRTL,locale($type,community,id,language,locale,name)"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocaleSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single LocaleSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocaleSettings"
                }
              }
            }
          }
        }
      }
    },
    "/admin/globalSettings/notificationSettings" : {
      "description" : "This resource lets you work with the notification settings of your YouTrack service: read and configure Email and Jabber server settings to enable notifications to users.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,emailSettings($type,id,isEnabled),id,jabberSettings($type,id,isEnabled)"
        } ],
        "responses" : {
          "200" : {
            "description" : "single NotificationSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,emailSettings($type,id,isEnabled),id,jabberSettings($type,id,isEnabled)"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single NotificationSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationSettings"
                }
              }
            }
          }
        }
      }
    },
    "/admin/globalSettings/restSettings" : {
      "description" : "This resource lets you work with the Resource Sharing settings of your YouTrack service.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allowAllOrigins,allowedOrigins,id"
        } ],
        "responses" : {
          "200" : {
            "description" : "single RestCorsSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestCorsSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allowAllOrigins,allowedOrigins,id"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RestCorsSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single RestCorsSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestCorsSettings"
                }
              }
            }
          }
        }
      }
    },
    "/admin/globalSettings/systemSettings" : {
      "description" : "This resource lets you work with the System settings of your YouTrack service.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize"
        } ],
        "responses" : {
          "200" : {
            "description" : "single SystemSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,baseUrl,id,isApplicationReadOnly,maxExportItems,maxUploadFileSize"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SystemSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single SystemSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemSettings"
                }
              }
            }
          }
        }
      }
    },
    "/admin/projects" : {
      "description" : "This resource provides access to projects.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,customFields,id,leader($type,id,login,name,ringId),name,shortName"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of Project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "template",
          "in" : "query",
          "description" : "If the `template` is not specified, then the new project will use the default settings.\n<emphasis>Optional</emphasis>. Lets you specify the template to use for the new project.\nPossible values: `scrum`, `kanban`.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,customFields,id,leader($type,id,login,name,ringId),name,shortName"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single Project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/admin/projects/{id}" : {
      "description" : "This resource provides access to projects.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,customFields,id,leader($type,id,login,name,ringId),name,shortName"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single Project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,customFields,id,leader($type,id,login,name,ringId),name,shortName"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single Project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/projects/{id}/customFields" : {
      "description" : "This resource lets you access and configure custom fields in the specific project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of ProjectCustomField",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProjectCustomField"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectCustomField"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single ProjectCustomField",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectCustomField"
                }
              }
            }
          }
        }
      }
    },
    "/admin/projects/{id}/customFields/{projectCustomFieldId}" : {
      "description" : "This resource lets you access and configure custom fields in the specific project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectCustomFieldId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single ProjectCustomField",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectCustomField"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,bundle($type,id),canBeEmpty,defaultValues($type,id,name),emptyFieldText,field($type,fieldType($type,id),id,localizedName,name),id,isPublic,ordinal"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectCustomFieldId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectCustomField"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single ProjectCustomField",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectCustomField"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectCustomFieldId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "projectCustomFieldId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/projects/{id}/issues" : {
      "description" : "This resource lets you work with issues within the particular project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of Issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Issue"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "muteUpdateNotifications",
          "in" : "query",
          "description" : "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single Issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Issue"
                }
              }
            }
          }
        }
      }
    },
    "/admin/projects/{id}/issues/{issueId}" : {
      "description" : "This resource lets you work with issues within the particular project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single Issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Issue"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "muteUpdateNotifications",
          "in" : "query",
          "description" : "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single Issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Issue"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/projects/{id}/timeTrackingSettings" : {
      "description" : "This resource lets you configure the time tracking settings for the specific project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,enabled,estimate($type,field($type,fieldType($type,id),id,localizedName,name),id),id,timeSpent($type,field($type,fieldType($type,id),id,localizedName,name),id)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single ProjectTimeTrackingSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectTimeTrackingSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,enabled,estimate($type,field($type,fieldType($type,id),id,localizedName,name),id),id,timeSpent($type,field($type,fieldType($type,id),id,localizedName,name),id)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectTimeTrackingSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single ProjectTimeTrackingSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectTimeTrackingSettings"
                }
              }
            }
          }
        }
      }
    },
    "/admin/projects/{id}/timeTrackingSettings/workItemTypes" : {
      "description" : "This resource lets you configure work item types of the project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,autoAttached,id,name"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of WorkItemType",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WorkItemType"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,autoAttached,id,name"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkItemType"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single WorkItemType",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkItemType"
                }
              }
            }
          }
        }
      }
    },
    "/admin/projects/{id}/timeTrackingSettings/workItemTypes/{workItemTypeId}" : {
      "description" : "This resource lets you configure work item types of the project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,autoAttached,id,name"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workItemTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single WorkItemType",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkItemType"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workItemTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "workItemTypeId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/telemetry" : {
      "description" : "This resource lets you get telemetry data of your YouTrack service.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allocatedMemory,availableMemory,availableProcessors,blobStringsCacheHitRate,cachedResultsCountInDBQueriesCache,databaseBackgroundThreads,databaseLocation,databaseQueriesCacheHitRate,databaseSize,fullDatabaseSize,id,installationFolder,logsLocation,notificationAnalyzerThreads,onlineUsers($type,id,users),pendingAsyncJobs,reportCalculatorThreads,requestsPerSecond,startedTime,textIndexSize,totalTransactions,transactionsPerSecond,uptime,usedMemory"
        } ],
        "responses" : {
          "200" : {
            "description" : "single Telemetry",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Telemetry"
                }
              }
            }
          }
        }
      }
    },
    "/admin/timeTrackingSettings" : {
      "description" : "This resource lets you configure system-wide time tracking settings.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,workItemTypes($type,id,name),workTimeSettings($type,daysAWeek,firstDayOfWeek,id,minutesADay,workDays)"
        } ],
        "responses" : {
          "200" : {
            "description" : "single GlobalTimeTrackingSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GlobalTimeTrackingSettings"
                }
              }
            }
          }
        }
      }
    },
    "/admin/timeTrackingSettings/workItemTypes" : {
      "description" : "This resource lets you read, update, and delete types of work items.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,autoAttached,id,name"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of WorkItemType",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WorkItemType"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,autoAttached,id,name"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkItemType"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single WorkItemType",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkItemType"
                }
              }
            }
          }
        }
      }
    },
    "/admin/timeTrackingSettings/workItemTypes/{workItemTypeId}" : {
      "description" : "This resource lets you read, update, and delete types of work items.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,autoAttached,id,name"
        }, {
          "name" : "workItemTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single WorkItemType",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkItemType"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,autoAttached,id,name"
        }, {
          "name" : "workItemTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkItemType"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single WorkItemType",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkItemType"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "workItemTypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "workItemTypeId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/admin/timeTrackingSettings/workTimeSettings" : {
      "description" : "This resource lets you configure the system-wide work time settings.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,daysAWeek,firstDayOfWeek,id,minutesADay,workDays"
        } ],
        "responses" : {
          "200" : {
            "description" : "single WorkTimeSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkTimeSettings"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,daysAWeek,firstDayOfWeek,id,minutesADay,workDays"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkTimeSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single WorkTimeSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkTimeSettings"
                }
              }
            }
          }
        }
      }
    },
    "/agiles" : {
      "description" : "This resource lets you work with agile boards in YouTrack using the REST API.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,name,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of Agile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Agile"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "template",
          "in" : "query",
          "description" : "The name of the board template that should be used. Possible values: `kanban`, `scrum`, `version`, `custom`, `personal`.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,name,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Agile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single Agile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Agile"
                }
              }
            }
          }
        }
      }
    },
    "/agiles/{id}" : {
      "description" : "This resource lets you work with agile boards in YouTrack using the REST API.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,name,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single Agile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Agile"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,columnSettings($type,columns($type,id),field($type,fieldType($type,id),id,localizedName,name),id),id,name,owner($type,id,login,name,ringId),projects($type,id,name,shortName),status($type,id,valid),swimlaneSettings($type,enabled,field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,values($type,id,name))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Agile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single Agile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Agile"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/agiles/{id}/sprints" : {
      "description" : "This resource lets you work with sprints of the specific agile board.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,finish,id,isDefault,name,start"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of Sprint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Sprint"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "muteUpdateNotifications",
          "in" : "query",
          "description" : "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,finish,id,isDefault,name,start"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sprint"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single Sprint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sprint"
                }
              }
            }
          }
        }
      }
    },
    "/agiles/{id}/sprints/{sprintId}" : {
      "description" : "This resource lets you work with sprints of the specific agile board.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,finish,id,isDefault,name,start"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sprintId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single Sprint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sprint"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,finish,id,isDefault,name,start"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sprintId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sprint"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single Sprint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sprint"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sprintId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "sprintId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/commands" : {
      "description" : "This resource lets you apply commands to issues.",
      "get" : {
        "parameters" : [ {
          "name" : "muteUpdateNotifications",
          "in" : "query",
          "description" : "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,caret,commands($type,description,error,id),comment,id,issues($type,id,idReadable,numberInProject),query,suggestions($type,caret,completionEnd,completionStart,description,id,matchingEnd,matchingStart,option,prefix,suffix)"
        } ],
        "responses" : {
          "200" : {
            "description" : "single CommandList",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommandList"
                }
              }
            }
          }
        }
      }
    },
    "/commands/assist" : {
      "description" : "Lets you get suggestions for the currently entered command.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,caret,commands($type,description,error,id),comment,id,issues($type,id,idReadable,numberInProject),query,suggestions($type,caret,completionEnd,completionStart,description,id,matchingEnd,matchingStart,option,prefix,suffix)"
        } ],
        "responses" : {
          "200" : {
            "description" : "single CommandList",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommandList"
                }
              }
            }
          }
        }
      }
    },
    "/groups" : {
      "description" : "",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allUsersGroup,id,name,ringId"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of UserGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groups/{id}" : {
      "description" : "",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,allUsersGroup,id,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single UserGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserGroup"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/issueLinkTypes" : {
      "description" : "This resource provides operations with issue link types.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of IssueLinkType",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueLinkType"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueLinkType"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single IssueLinkType",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueLinkType"
                }
              }
            }
          }
        }
      }
    },
    "/issueLinkTypes/{id}" : {
      "description" : "This resource provides operations with issue link types.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single IssueLinkType",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueLinkType"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,aggregation,directed,id,localizedName,localizedSourceToTarget,localizedTargetToSource,name,readOnly,sourceToTarget,targetToSource"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueLinkType"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single IssueLinkType",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueLinkType"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/issueTags" : {
      "description" : "This resource lets you access and work with issue tags in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId)"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of IssueTag",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueTag"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId)"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueTag"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single IssueTag",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueTag"
                }
              }
            }
          }
        }
      }
    },
    "/issueTags/{id}" : {
      "description" : "This resource lets you access and work with issue tags in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single IssueTag",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueTag"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueTag"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single IssueTag",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueTag"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/issueTags/{id}/issues" : {
      "description" : "This resource lets you get a list of issues that the specific tag is added to.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of Issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Issue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issueTags/{id}/issues/{issueId}" : {
      "description" : "This resource lets you get a list of issues that the specific tag is added to.",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/issues" : {
      "description" : "Resource that provides access to issues.",
      "get" : {
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Issues search query. Read more about search syntax here: <a href=\"https://www.jetbrains.com/help/youtrack/incloud/?Search-and-Command-Attributes\">Search and Command Attributes</a>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of Issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Issue"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "draftId",
          "in" : "query",
          "description" : "ID of a draft to report as the new issue. If no `draftId` is provided, the issue is created from scratch. In this case, you must specify the project in the request payload.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "muteUpdateNotifications",
          "in" : "query",
          "description" : "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single Issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Issue"
                }
              }
            }
          }
        }
      }
    },
    "/issues/{id}" : {
      "description" : "Resource that provides access to issues.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single Issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Issue"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "muteUpdateNotifications",
          "in" : "query",
          "description" : "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single Issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Issue"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/issues/{id}/activities" : {
      "description" : "This resource provides access to the issue activities with the possibility to filter them by various parameters. Basically, this resource lets you get history of operations for specific issue.",
      "get" : {
        "parameters" : [ {
          "name" : "categories",
          "in" : "query",
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reverse",
          "in" : "query",
          "description" : "Indicates whether the order of returning activities is from newest to oldest or the opposite.\nIf \"false\", then the oldest activity item that matches a selected filter is returned first.\nIf \"true\", then the newest activity is returned first. By default, \"false\".",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered to be 0.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered as Long.MAX_VALUE.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "Parameter to filter activities by the author. The database id or login, or Hub id,\nor 'me' for the current logged in user could be specified.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,added,author($type,id,login,name,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of ActivityItem",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ActivityItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issues/{id}/activities/{activityItemId}" : {
      "description" : "This resource provides access to the issue activities with the possibility to filter them by various parameters. Basically, this resource lets you get history of operations for specific issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,added,author($type,id,login,name,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityItemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single ActivityItem",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityItem"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "activityItemId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/issues/{id}/activitiesPage" : {
      "description" : "This resource provides access to the issue activities wrapping it to the page object.\nThe main advantage of the page in comparision to a list of activities is cursors.\nThe page provides boundary marks that allows continuing iteration over the activities from the place\nthe page is finished.",
      "get" : {
        "parameters" : [ {
          "name" : "categories",
          "in" : "query",
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reverse",
          "in" : "query",
          "description" : "Indicates whether the order of returning activities is from newest to oldest or the opposite.\nIf \"false\", then the oldest activity item that matches a selected filter is returned first.\nIf \"true\", then the newest activity is returned first. By default, \"false\".",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Start timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered to be 0.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "End timestamp of the time interval the activity timestamp belongs to.\nIf the parameter is not set, it is considered as Long.MAX_VALUE.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "Parameter to filter activities by the author. The database id or login, or Hub id,\nor 'me' for the current logged in user could be specified.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cursor",
          "in" : "query",
          "description" : "",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "activityId",
          "in" : "query",
          "description" : "ID of the activity that should be included in the page. The activity is allocated to the middle of the page.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,activities($type,added,author($type,id,login,name,ringId),category($type,id),field($type,customField($type,fieldType($type,id),id,localizedName,name),id,name),id,removed,target,targetMember,timestamp),afterCursor,beforeCursor,hasAfter,hasBefore,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single ActivityCursorPage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityCursorPage"
                }
              }
            }
          }
        }
      }
    },
    "/issues/{id}/attachments" : {
      "description" : "This resource lets you work with attachments in the specific issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of IssueAttachment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueAttachment"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "muteUpdateNotifications",
          "in" : "query",
          "description" : "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ]
      }
    },
    "/issues/{id}/attachments/{issueAttachmentId}" : {
      "description" : "This resource lets you work with attachments in the specific issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueAttachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single IssueAttachment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueAttachment"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),charset,created,extension,id,metaData,mimeType,name,size,updated,url"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueAttachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueAttachment"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single IssueAttachment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueAttachment"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueAttachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueAttachmentId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/issues/{id}/comments" : {
      "description" : "This resource lets you work with comments of an issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,attachments($type,id),author($type,id,login,name,ringId),created,deleted,id,text,updated,usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of IssueComment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueComment"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "draftId",
          "in" : "query",
          "description" : "ID of an existing draft that should be published. This parameter is optional.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "muteUpdateNotifications",
          "in" : "query",
          "description" : "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,attachments($type,id),author($type,id,login,name,ringId),created,deleted,id,text,updated,usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueComment"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single IssueComment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueComment"
                }
              }
            }
          }
        }
      }
    },
    "/issues/{id}/comments/{issueCommentId}" : {
      "description" : "This resource lets you work with comments of an issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,attachments($type,id),author($type,id,login,name,ringId),created,deleted,id,text,updated,usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueCommentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single IssueComment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueComment"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "muteUpdateNotifications",
          "in" : "query",
          "description" : "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,attachments($type,id),author($type,id,login,name,ringId),created,deleted,id,text,updated,usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueCommentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueComment"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single IssueComment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueComment"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueCommentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueCommentId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/issues/{id}/customFields" : {
      "description" : "This resource lets you work with custom fields of the issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of IssueCustomField",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueCustomField"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issues/{id}/customFields/{issueCustomFieldId}" : {
      "description" : "This resource lets you work with custom fields of the issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueCustomFieldId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single IssueCustomField",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueCustomField"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "muteUpdateNotifications",
          "in" : "query",
          "description" : "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueCustomFieldId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueCustomField"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single IssueCustomField",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueCustomField"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueCustomFieldId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/issues/{id}/links" : {
      "description" : "This resource lets you read links of the issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,direction,id,linkType($type,id,localizedName,name)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of IssueLink",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueLink"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/issues/{id}/links/{issueLinkId}" : {
      "description" : "This resource lets you read links of the issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,direction,id,linkType($type,id,localizedName,name)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueLinkId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single IssueLink",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueLink"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueLinkId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/issues/{id}/links/{issueLinkId}/issues" : {
      "description" : "This resource lets you read, add, and remove links to other issues for the current one.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueLinkId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of Issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Issue"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "muteUpdateNotifications",
          "in" : "query",
          "description" : "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,created,customFields($type,id,name,projectCustomField($type,field($type,fieldType($type,id),id,localizedName,name),id),value($type,id,name)),description,id,idReadable,links($type,direction,id,linkType($type,id,localizedName,name)),numberInProject,project($type,id,name,shortName),reporter($type,id,login,name,ringId),resolved,summary,updated,updater($type,id,login,name,ringId),usesMarkdown,visibility($type,id,permittedGroups($type,id,name,ringId),permittedUsers($type,id,login,name,ringId))"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueLinkId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single Issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Issue"
                }
              }
            }
          }
        }
      }
    },
    "/issues/{id}/links/{issueLinkId}/issues/{issueId}" : {
      "description" : "This resource lets you read, add, and remove links to other issues for the current one.",
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueLinkId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueLinkId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/issues/{id}/project" : {
      "description" : "This resource lets you read the project, to which the issue belongs, and move the issue to another project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,customFields,id,leader($type,id,login,name,ringId),name,shortName"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single Project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "muteUpdateNotifications",
          "in" : "query",
          "description" : "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,archived,customFields,id,leader($type,id,login,name,ringId),name,shortName"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single Project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/issues/{id}/timeTracking" : {
      "description" : "This sub-resource lets you read work items of an issue and time tracking status in the issue's project.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,enabled,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single IssueTimeTracker",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueTimeTracker"
                }
              }
            }
          }
        }
      }
    },
    "/issues/{id}/timeTracking/workItems" : {
      "description" : "This resource lets you work with work items in the specific issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),created,creator($type,id,login,name,ringId),date,duration($type,id),id,text,updated,usesMarkdown"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of IssueWorkItem",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueWorkItem"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "muteUpdateNotifications",
          "in" : "query",
          "description" : "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. Available since 2021.3.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),created,creator($type,id,login,name,ringId),date,duration($type,id),id,text,updated,usesMarkdown"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueWorkItem"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single IssueWorkItem",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueWorkItem"
                }
              }
            }
          }
        }
      }
    },
    "/issues/{id}/timeTracking/workItems/{issueWorkItemId}" : {
      "description" : "This resource lets you work with work items in the specific issue.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),created,creator($type,id,login,name,ringId),date,duration($type,id),id,text,updated,usesMarkdown"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueWorkItemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single IssueWorkItem",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueWorkItem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "muteUpdateNotifications",
          "in" : "query",
          "description" : "Set this parameter to `true` if no notifications should be sent on changes made by this request. This doesn't mute notifications sent by any workflow rules. Using this parameter requires <control>Apply Commands Silently</control> permission in all projects affected by the request. <br/>Available since 2021.3.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),created,creator($type,id,login,name,ringId),date,duration($type,id),id,text,updated,usesMarkdown"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueWorkItemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IssueWorkItem"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single IssueWorkItem",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueWorkItem"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueWorkItemId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueWorkItemId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/savedQueries" : {
      "description" : "This resource lets you access and work with saved searches in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId),query"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of SavedQuery",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SavedQuery"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId),query"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SavedQuery"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single SavedQuery",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavedQuery"
                }
              }
            }
          }
        }
      }
    },
    "/savedQueries/{id}" : {
      "description" : "This resource lets you access and work with saved searches in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId),query"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single SavedQuery",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavedQuery"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId),query"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SavedQuery"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single SavedQuery",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavedQuery"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/search/assist" : {
      "description" : "Lets you get suggestions for the currently entered search query.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,suggestions($type,caret,completionEnd,completionStart,description,id,matchingEnd,matchingStart,option,prefix,suffix)"
        } ],
        "responses" : {
          "200" : {
            "description" : "single SearchSuggestions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchSuggestions"
                }
              }
            }
          }
        }
      }
    },
    "/users" : {
      "description" : "",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,banned,email,fullName,guest,id,login,name,ringId"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}" : {
      "description" : "",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,banned,email,fullName,guest,id,login,name,ringId"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{id}/profiles/general" : {
      "description" : "This resource lets you read and update general settings in the YouTrack profile of the specified user.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,locale($type,community,id,language,locale,name),timezone($type,id,offset,presentation)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single GeneralUserProfile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GeneralUserProfile"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,dateFieldFormat($type,datePattern,id,pattern,presentation),id,locale($type,community,id,language,locale,name),timezone($type,id,offset,presentation)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GeneralUserProfile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single GeneralUserProfile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GeneralUserProfile"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/profiles/notifications" : {
      "description" : "This resource lets you read and update notification settings in the profile of the specific user.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single NotificationsUserProfile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationsUserProfile"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationsUserProfile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single NotificationsUserProfile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationsUserProfile"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/profiles/timetracking" : {
      "description" : "This resource lets you configure the time tracking settings in the user's profile.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,periodFormat($type,id)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single TimeTrackingUserProfile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeTrackingUserProfile"
                }
              }
            }
          }
        }
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,periodFormat($type,id)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TimeTrackingUserProfile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "single TimeTrackingUserProfile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeTrackingUserProfile"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/savedQueries" : {
      "description" : "This resource lets you get the list of saved searches that the specific user created.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId),query"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of SavedQuery",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SavedQuery"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/savedQueries/{savedQueryId}" : {
      "description" : "This resource lets you get the list of saved searches that the specific user created.",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "savedQueryId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{id}/tags" : {
      "description" : "This resource lets you work with tags that belong to specific user.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,id,name,owner($type,id,login,name,ringId)"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of IssueTag",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueTag"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/tags/{issueTagId}" : {
      "description" : "This resource lets you work with tags that belong to specific user.",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "issueTagId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/me" : {
      "description" : "This resource lets you read the settings of your account and your own profile in YouTrack.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,banned,email,fullName,guest,id,login,ringId"
        } ],
        "responses" : {
          "200" : {
            "description" : "single Me",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Me"
                }
              }
            }
          }
        }
      }
    },
    "/workItems" : {
      "description" : "Resource that provides access to work items.",
      "get" : {
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Issues search query. Read more about search syntax here: @@Search-and-Command-Attributes",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "The start date of the interval for work items date.",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "The end date of the interval for work items date.",
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The start timestamp of the interval for work items date.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "end",
          "in" : "query",
          "description" : "The end timestamp of the interval for work items date.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "createdStart",
          "in" : "query",
          "description" : "The start timestamp of the interval for work items created date.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "createdEnd",
          "in" : "query",
          "description" : "The end timestamp of the interval for work items created date.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "updatedStart",
          "in" : "query",
          "description" : "The start timestamp of the interval for work items updated date.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "updatedEnd",
          "in" : "query",
          "description" : "The end timestamp of the interval for work items updated date.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "Parameter to filter work items by there author. Could specify few values of database id or login or Hub id or 'me' for current logged in user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "creator",
          "in" : "query",
          "description" : "Parameter to filter work items by there creator. Could specify few values of database id or login or Hub id or 'me' for current logged in user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),created,creator($type,id,login,name,ringId),date,duration($type,id),id,text,updated,usesMarkdown"
        }, {
          "name" : "$skip",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "collection of IssueWorkItem",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/IssueWorkItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/workItems/{id}" : {
      "description" : "Resource that provides access to work items.",
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "$type,author($type,id,login,name,ringId),created,creator($type,id,login,name,ringId),date,duration($type,id),id,text,updated,usesMarkdown"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "single IssueWorkItem",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IssueWorkItem"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    }
  },
  "components" : {
    "schemas" : {
      "ActivityCategory" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "ActivityCursorPage" : {
        "type" : "object",
        "properties" : {
          "reverse" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "beforeCursor" : {
            "type" : "string",
            "readOnly" : true
          },
          "afterCursor" : {
            "type" : "string",
            "readOnly" : true
          },
          "hasBefore" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "hasAfter" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "activities" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ActivityItem"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a page object that wraps a list of issue activities.\nThe main advantage of the page in comparision to a list of activities is cursors.\nThe page provides boundary marks that allow continuous iteration over the activities from the place\nthe page is finished.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "ActivityItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a change in an issue or in its related entities. In the UI, you see these changes as\nthe Activity stream. It shows a feed of all updates of the issue: issue history, comments, attachments,\nVCS changes, work items, and so on.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "Agile" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : false
          },
          "owner" : {
            "$ref" : "#/components/schemas/User",
            "readOnly" : false
          },
          "visibleFor" : {
            "$ref" : "#/components/schemas/UserGroup",
            "readOnly" : false
          },
          "visibleForProjectBased" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "updateableBy" : {
            "$ref" : "#/components/schemas/UserGroup",
            "readOnly" : false
          },
          "updateableByProjectBased" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "orphansAtTheTop" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "hideOrphansSwimlane" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "estimationField" : {
            "$ref" : "#/components/schemas/CustomField",
            "readOnly" : false
          },
          "originalEstimationField" : {
            "$ref" : "#/components/schemas/CustomField",
            "readOnly" : false
          },
          "projects" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/Project"
            }
          },
          "sprints" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/Sprint"
            }
          },
          "currentSprint" : {
            "$ref" : "#/components/schemas/Sprint",
            "readOnly" : true
          },
          "columnSettings" : {
            "$ref" : "#/components/schemas/ColumnSettings",
            "readOnly" : true
          },
          "swimlaneSettings" : {
            "$ref" : "#/components/schemas/SwimlaneSettings",
            "readOnly" : false
          },
          "sprintsSettings" : {
            "$ref" : "#/components/schemas/SprintsSettings",
            "readOnly" : true
          },
          "colorCoding" : {
            "$ref" : "#/components/schemas/ColorCoding",
            "readOnly" : false
          },
          "status" : {
            "$ref" : "#/components/schemas/AgileStatus",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents an agile board configuration.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "AgileColumn" : {
        "type" : "object",
        "properties" : {
          "presentation" : {
            "type" : "string",
            "readOnly" : true
          },
          "isResolved" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : false
          },
          "parent" : {
            "$ref" : "#/components/schemas/ColumnSettings",
            "readOnly" : true
          },
          "wipLimit" : {
            "$ref" : "#/components/schemas/WIPLimit",
            "readOnly" : false
          },
          "fieldValues" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/AgileColumnFieldValue"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents settings for a single board column",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "AgileColumnFieldValue" : {
        "description" : "Represents a field value or values, parameterizing agile column.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseAttributeValue"
        }, {
          "type" : "object",
          "properties" : {
            "name" : {
              "type" : "string",
              "readOnly" : false
            },
            "isResolved" : {
              "type" : "boolean",
              "readOnly" : true
            }
          }
        } ]
      },
      "AgileStatus" : {
        "type" : "object",
        "properties" : {
          "valid" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "hasJobs" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "errors" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "warnings" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Shows if the board has any configuration problems.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "AppearanceSettings" : {
        "type" : "object",
        "properties" : {
          "timeZone" : {
            "$ref" : "#/components/schemas/TimeZoneDescriptor",
            "readOnly" : false
          },
          "dateFieldFormat" : {
            "$ref" : "#/components/schemas/DateFormatDescriptor",
            "readOnly" : false
          },
          "logo" : {
            "$ref" : "#/components/schemas/Logo",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the Visual settings of the YouTrack service.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "AttachmentActivityItem" : {
        "description" : "Represents a change in the list of attachments of an issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatedDeletedActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/IssueAttachment",
              "readOnly" : true
            },
            "removed" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/IssueAttachment"
              }
            },
            "added" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/IssueAttachment"
              }
            }
          }
        } ]
      },
      "AttributeBasedSwimlaneSettings" : {
        "description" : "",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SwimlaneSettings"
        }, {
          "type" : "object",
          "properties" : {
            "field" : {
              "$ref" : "#/components/schemas/FilterField",
              "readOnly" : false
            },
            "values" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/SwimlaneEntityAttributeValue"
              }
            }
          }
        } ]
      },
      "BackupError" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "errorMessage" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents an error that appeared during the backup.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "BackupFile" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "creationDate" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "link" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the backup file.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "BackupStatus" : {
        "type" : "object",
        "properties" : {
          "backupInProgress" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "backupCancelled" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "backupError" : {
            "$ref" : "#/components/schemas/BackupError",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the current status of the backup process.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "BaseBundle" : {
        "description" : "Represents a set of field values in YouTrack.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Bundle"
        } ]
      },
      "BuildBundle" : {
        "description" : "Represents a set of builds in YouTrack.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseBundle"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/BuildBundleElement"
              }
            }
          }
        } ]
      },
      "BuildBundleCustomFieldDefaults" : {
        "description" : "Default settings for the build-type field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleCustomFieldDefaults"
        }, {
          "type" : "object",
          "properties" : {
            "bundle" : {
              "$ref" : "#/components/schemas/BuildBundle",
              "readOnly" : false
            },
            "defaultValues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/BuildBundleElement"
              }
            }
          }
        } ]
      },
      "BuildBundleElement" : {
        "description" : "Represents a build - a single element of a builds bundle.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleElement"
        }, {
          "type" : "object",
          "properties" : {
            "assembleDate" : {
              "type" : "integer",
              "format" : "int64",
              "readOnly" : false
            }
          }
        } ]
      },
      "BuildProjectCustomField" : {
        "description" : "Represents project settings for the build field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleProjectCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "bundle" : {
              "$ref" : "#/components/schemas/BuildBundle",
              "readOnly" : false
            },
            "defaultValues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/BuildBundleElement"
              }
            }
          }
        } ]
      },
      "Bundle" : {
        "type" : "object",
        "properties" : {
          "isUpdateable" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a set of custom field values in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "BundleCustomFieldDefaults" : {
        "description" : "Represents field defaults for bundle fields.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CustomFieldDefaults"
        } ]
      },
      "BundleElement" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : false
          },
          "bundle" : {
            "$ref" : "#/components/schemas/Bundle",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "readOnly" : false
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : false
          },
          "color" : {
            "$ref" : "#/components/schemas/FieldStyle",
            "readOnly" : false
          },
          "hasRunningJob" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a field value in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "BundleProjectCustomField" : {
        "description" : "Represents project settings for the field with a defined set of values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectCustomField"
        } ]
      },
      "ColorCoding" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Describes rules that define which colors are used for cards on the agile board.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "ColumnSettings" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "$ref" : "#/components/schemas/CustomField",
            "readOnly" : false
          },
          "columns" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/AgileColumn"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Agile board columns settings.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "CommandLimitedVisibility" : {
        "description" : "Stores the restricted visibility settings for the command.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommandVisibility"
        }, {
          "type" : "object",
          "properties" : {
            "permittedGroups" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            },
            "permittedUsers" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        } ]
      },
      "CommandList" : {
        "type" : "object",
        "properties" : {
          "comment" : {
            "type" : "string",
            "readOnly" : false
          },
          "visibility" : {
            "$ref" : "#/components/schemas/CommandVisibility",
            "readOnly" : false
          },
          "query" : {
            "type" : "string",
            "readOnly" : false
          },
          "caret" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : false
          },
          "silent" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "usesMarkdown" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "runAs" : {
            "type" : "string",
            "readOnly" : false
          },
          "commands" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ParsedCommand"
            }
          },
          "issues" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/Issue"
            }
          },
          "suggestions" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Suggestion"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents list of command and related comment in YouTrack.\nCan be used to either apply a command or get command suggestions.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "CommandUnlimitedVisibility" : {
        "description" : "Comment is visible for all the users who can read the issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommandVisibility"
        } ]
      },
      "CommandVisibility" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Visibility settings of the comment that is added along with the command.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "CommentActivityItem" : {
        "description" : "Represents a change in the comments of an issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatedDeletedActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/IssueComment",
              "readOnly" : true
            },
            "removed" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/IssueComment"
              }
            },
            "added" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/IssueComment"
              }
            },
            "authorGroup" : {
              "$ref" : "#/components/schemas/UserGroup",
              "readOnly" : true
            }
          }
        } ]
      },
      "CommentAttachmentsActivityItem" : {
        "description" : "Represents a change in the `attachments` attribute of an IssueComment.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultiValueActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/IssueComment",
              "readOnly" : true
            },
            "removed" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/IssueAttachment"
              }
            },
            "added" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/IssueAttachment"
              }
            }
          }
        } ]
      },
      "CreatedDeletedActivityItem" : {
        "description" : "Represents an action when an entity is created or deleted in an issue. For example, a new comment is created in the issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ActivityItem"
        } ]
      },
      "CustomField" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : false
          },
          "localizedName" : {
            "type" : "string",
            "readOnly" : false
          },
          "fieldType" : {
            "$ref" : "#/components/schemas/FieldType",
            "readOnly" : false
          },
          "isAutoAttached" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "isDisplayedInIssueList" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : false
          },
          "aliases" : {
            "type" : "string",
            "readOnly" : false
          },
          "fieldDefaults" : {
            "$ref" : "#/components/schemas/CustomFieldDefaults",
            "readOnly" : true
          },
          "hasRunningJob" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "isUpdateable" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "instances" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/ProjectCustomField"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a custom field in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "CustomFieldActivityItem" : {
        "description" : "Represents an activity that affects a custom field of an issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/Issue",
              "readOnly" : true
            },
            "removed" : {
              "type" : "object",
              "readOnly" : true
            },
            "added" : {
              "type" : "object",
              "readOnly" : true
            }
          }
        } ]
      },
      "CustomFieldDefaults" : {
        "type" : "object",
        "properties" : {
          "canBeEmpty" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "emptyFieldText" : {
            "type" : "string",
            "readOnly" : false
          },
          "isPublic" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "parent" : {
            "$ref" : "#/components/schemas/CustomField",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents default project-related settings of the custom field. These settings are applied at the moment when the custom field is attached to a project. After that, any changes in default settings do not affect the field settings for this project.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "CustomFilterField" : {
        "description" : "Represents a custom field of the issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FilterField"
        }, {
          "type" : "object",
          "properties" : {
            "customField" : {
              "$ref" : "#/components/schemas/CustomField",
              "readOnly" : true
            }
          }
        } ]
      },
      "DatabaseAttributeValue" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents string reference to the value.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "DatabaseBackupSettings" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "readOnly" : false
          },
          "filesToKeep" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : false
          },
          "cronExpression" : {
            "type" : "string",
            "readOnly" : false
          },
          "archiveFormat" : {
            "type" : "string",
            "readOnly" : false,
            "enum" : [ "TAR_GZ", "ZIP" ]
          },
          "isOn" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "availableDiskSpace" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "notifiedUsers" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "backupStatus" : {
            "$ref" : "#/components/schemas/BackupStatus",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents database backup settings of the YouTrack instance.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "DateFormatDescriptor" : {
        "type" : "object",
        "properties" : {
          "presentation" : {
            "type" : "string",
            "readOnly" : true
          },
          "pattern" : {
            "type" : "string",
            "readOnly" : true
          },
          "datePattern" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents date format.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "DateIssueCustomField" : {
        "description" : "Represents the issue custom field of the `date` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SimpleIssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "object",
              "readOnly" : true
            }
          }
        } ]
      },
      "DuplicateVote" : {
        "type" : "object",
        "properties" : {
          "issue" : {
            "$ref" : "#/components/schemas/Issue",
            "readOnly" : true
          },
          "user" : {
            "$ref" : "#/components/schemas/User",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a vote for duplicates of the issue.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "DurationValue" : {
        "type" : "object",
        "properties" : {
          "minutes" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "presentation" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the duration value and its visual presentation.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "EmailSettings" : {
        "type" : "object",
        "properties" : {
          "isEnabled" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "host" : {
            "type" : "string",
            "readOnly" : false
          },
          "port" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : false
          },
          "mailProtocol" : {
            "type" : "string",
            "readOnly" : false,
            "enum" : [ "SMTP", "SMTPS", "SMTP_TLS" ]
          },
          "anonymous" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "login" : {
            "type" : "string",
            "readOnly" : false
          },
          "sslKey" : {
            "$ref" : "#/components/schemas/StorageEntry",
            "readOnly" : false
          },
          "from" : {
            "type" : "string",
            "readOnly" : false
          },
          "replyTo" : {
            "type" : "string",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents email settings for this YouTrack installation.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "EnumBundle" : {
        "description" : "Represents an enumerated set of values in YouTrack.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseBundle"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/EnumBundleElement"
              }
            }
          }
        } ]
      },
      "EnumBundleCustomFieldDefaults" : {
        "description" : "Default settings for the enum-type field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleCustomFieldDefaults"
        }, {
          "type" : "object",
          "properties" : {
            "bundle" : {
              "$ref" : "#/components/schemas/EnumBundle",
              "readOnly" : false
            },
            "defaultValues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/EnumBundleElement"
              }
            }
          }
        } ]
      },
      "EnumBundleElement" : {
        "description" : "Represents an enumeration value in YouTrack.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/LocalizableBundleElement"
        } ]
      },
      "EnumProjectCustomField" : {
        "description" : "Represents project settings for the enum field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleProjectCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "bundle" : {
              "$ref" : "#/components/schemas/EnumBundle",
              "readOnly" : false
            },
            "defaultValues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/EnumBundleElement"
              }
            }
          }
        } ]
      },
      "ExternalIssue" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "url" : {
            "type" : "string",
            "readOnly" : true
          },
          "key" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "For an issue that was imported from another service, represents the reference to the issue in the external system.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "FieldBasedColorCoding" : {
        "description" : "Sets a card color based on a value of some custom field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ColorCoding"
        }, {
          "type" : "object",
          "properties" : {
            "prototype" : {
              "$ref" : "#/components/schemas/CustomField",
              "readOnly" : false
            }
          }
        } ]
      },
      "FieldStyle" : {
        "type" : "object",
        "properties" : {
          "background" : {
            "type" : "string",
            "readOnly" : true
          },
          "foreground" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the style settings of the field in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "FieldType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the type of a custom field in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "FilterField" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents an issue property, which can be a predefined field, a custom field, a link, and so on.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "GeneralUserProfile" : {
        "type" : "object",
        "properties" : {
          "dateFieldFormat" : {
            "$ref" : "#/components/schemas/DateFormatDescriptor",
            "readOnly" : false
          },
          "timezone" : {
            "$ref" : "#/components/schemas/TimeZoneDescriptor",
            "readOnly" : false
          },
          "locale" : {
            "$ref" : "#/components/schemas/LocaleDescriptor",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the user profile in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "GlobalSettings" : {
        "type" : "object",
        "properties" : {
          "systemSettings" : {
            "$ref" : "#/components/schemas/SystemSettings",
            "readOnly" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/NotificationSettings",
            "readOnly" : true
          },
          "restSettings" : {
            "$ref" : "#/components/schemas/RestCorsSettings",
            "readOnly" : true
          },
          "appearanceSettings" : {
            "$ref" : "#/components/schemas/AppearanceSettings",
            "readOnly" : true
          },
          "localeSettings" : {
            "$ref" : "#/components/schemas/LocaleSettings",
            "readOnly" : true
          },
          "license" : {
            "$ref" : "#/components/schemas/License",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents application-wide settings.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "GlobalTimeTrackingSettings" : {
        "type" : "object",
        "properties" : {
          "workItemTypes" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/WorkItemType"
            }
          },
          "workTimeSettings" : {
            "$ref" : "#/components/schemas/WorkTimeSettings",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents time tracking settings of your server.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "GroupProjectCustomField" : {
        "description" : "Represents project settings for group custom field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "defaultValues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            }
          }
        } ]
      },
      "Issue" : {
        "type" : "object",
        "properties" : {
          "idReadable" : {
            "type" : "string",
            "readOnly" : true
          },
          "created" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "updated" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "resolved" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "numberInProject" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "project" : {
            "$ref" : "#/components/schemas/Project",
            "readOnly" : false
          },
          "summary" : {
            "type" : "string",
            "readOnly" : false
          },
          "description" : {
            "type" : "string",
            "readOnly" : false
          },
          "usesMarkdown" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "wikifiedDescription" : {
            "type" : "string",
            "readOnly" : true
          },
          "reporter" : {
            "$ref" : "#/components/schemas/User",
            "readOnly" : true
          },
          "updater" : {
            "$ref" : "#/components/schemas/User",
            "readOnly" : true
          },
          "draftOwner" : {
            "$ref" : "#/components/schemas/User",
            "readOnly" : true
          },
          "isDraft" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "visibility" : {
            "$ref" : "#/components/schemas/Visibility",
            "readOnly" : false
          },
          "votes" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "comments" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/IssueComment"
            }
          },
          "commentsCount" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "tags" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/IssueTag"
            }
          },
          "links" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IssueLink"
            }
          },
          "externalIssue" : {
            "$ref" : "#/components/schemas/ExternalIssue",
            "readOnly" : true
          },
          "customFields" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IssueCustomField"
            }
          },
          "voters" : {
            "$ref" : "#/components/schemas/IssueVoters",
            "readOnly" : true
          },
          "watchers" : {
            "$ref" : "#/components/schemas/IssueWatchers",
            "readOnly" : true
          },
          "attachments" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/IssueAttachment"
            }
          },
          "subtasks" : {
            "$ref" : "#/components/schemas/IssueLink",
            "readOnly" : true
          },
          "parent" : {
            "$ref" : "#/components/schemas/IssueLink",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents an issue in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueAttachment" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : false
          },
          "author" : {
            "$ref" : "#/components/schemas/User",
            "readOnly" : true
          },
          "created" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "updated" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "extension" : {
            "type" : "string",
            "readOnly" : true
          },
          "charset" : {
            "type" : "string",
            "readOnly" : true
          },
          "mimeType" : {
            "type" : "string",
            "readOnly" : true
          },
          "metaData" : {
            "type" : "string",
            "readOnly" : true
          },
          "draft" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "removed" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "base64Content" : {
            "type" : "string",
            "readOnly" : false
          },
          "url" : {
            "type" : "string",
            "readOnly" : true
          },
          "visibility" : {
            "$ref" : "#/components/schemas/Visibility",
            "readOnly" : false
          },
          "issue" : {
            "$ref" : "#/components/schemas/Issue",
            "readOnly" : true
          },
          "comment" : {
            "$ref" : "#/components/schemas/IssueComment",
            "readOnly" : true
          },
          "thumbnailURL" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a file that is attached to an issue or a comment.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueBasedSwimlaneSettings" : {
        "description" : "Swimlane settings for the case, when each swimlane is represented by an issue and contains this issue's subtasks.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SwimlaneSettings"
        }, {
          "type" : "object",
          "properties" : {
            "field" : {
              "$ref" : "#/components/schemas/FilterField",
              "readOnly" : false
            },
            "defaultCardType" : {
              "$ref" : "#/components/schemas/SwimlaneValue",
              "readOnly" : false
            },
            "values" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/SwimlaneValue"
              }
            }
          }
        } ]
      },
      "IssueComment" : {
        "type" : "object",
        "properties" : {
          "text" : {
            "type" : "string",
            "readOnly" : false
          },
          "usesMarkdown" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "textPreview" : {
            "type" : "string",
            "readOnly" : true
          },
          "created" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "updated" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "author" : {
            "$ref" : "#/components/schemas/User",
            "readOnly" : true
          },
          "issue" : {
            "$ref" : "#/components/schemas/Issue",
            "readOnly" : true
          },
          "attachments" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/IssueAttachment"
            }
          },
          "visibility" : {
            "$ref" : "#/components/schemas/Visibility",
            "readOnly" : false
          },
          "deleted" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents an existing issue comment.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueCreatedActivityItem" : {
        "description" : "Represents an event when a user creates a new issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatedDeletedActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/Issue",
              "readOnly" : true
            },
            "removed" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/Issue"
              }
            },
            "added" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          }
        } ]
      },
      "IssueCustomField" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueFolder" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents an issue folder, such as a project, a saved search, or a tag.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueLink" : {
        "type" : "object",
        "properties" : {
          "direction" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "OUTWARD", "INWARD", "BOTH" ]
          },
          "linkType" : {
            "$ref" : "#/components/schemas/IssueLinkType",
            "readOnly" : true
          },
          "issues" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/Issue"
            }
          },
          "trimmedIssues" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Issue"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents issue links of a particular link type (for example, 'relates to').",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueLinkType" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : false
          },
          "localizedName" : {
            "type" : "string",
            "readOnly" : false
          },
          "sourceToTarget" : {
            "type" : "string",
            "readOnly" : false
          },
          "localizedSourceToTarget" : {
            "type" : "string",
            "readOnly" : false
          },
          "targetToSource" : {
            "type" : "string",
            "readOnly" : false
          },
          "localizedTargetToSource" : {
            "type" : "string",
            "readOnly" : false
          },
          "directed" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "aggregation" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "readOnly" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the settings of a link type in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueResolvedActivityItem" : {
        "description" : "Represents an event when a user resolves an issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SimpleValueActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "removed" : {
              "type" : "integer",
              "format" : "int64",
              "readOnly" : true
            },
            "added" : {
              "type" : "integer",
              "format" : "int64",
              "readOnly" : true
            }
          }
        } ]
      },
      "IssueTag" : {
        "description" : "Represents an issue tag.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/WatchFolder"
        }, {
          "type" : "object",
          "properties" : {
            "issues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/Issue"
              }
            },
            "color" : {
              "$ref" : "#/components/schemas/FieldStyle",
              "readOnly" : false
            },
            "untagOnResolve" : {
              "type" : "boolean",
              "readOnly" : false
            }
          }
        } ]
      },
      "IssueTimeTracker" : {
        "type" : "object",
        "properties" : {
          "workItems" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/IssueWorkItem"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents time tracking settings in the issue.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueVoters" : {
        "type" : "object",
        "properties" : {
          "hasVote" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "original" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "duplicate" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/DuplicateVote"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents users that have voted for the issue or its duplicates.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueWatcher" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/User",
            "readOnly" : true
          },
          "issue" : {
            "$ref" : "#/components/schemas/Issue",
            "readOnly" : true
          },
          "isStarred" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a user who subscribed for notifications about an issue.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueWatchers" : {
        "type" : "object",
        "properties" : {
          "hasStar" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "issueWatchers" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/IssueWatcher"
            }
          },
          "duplicateWatchers" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IssueWatcher"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents users that are subscribed to notifications about the issue.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "IssueWorkItem" : {
        "type" : "object",
        "properties" : {
          "author" : {
            "$ref" : "#/components/schemas/User",
            "readOnly" : false
          },
          "creator" : {
            "$ref" : "#/components/schemas/User",
            "readOnly" : true
          },
          "text" : {
            "type" : "string",
            "readOnly" : false
          },
          "textPreview" : {
            "type" : "string",
            "readOnly" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/WorkItemType",
            "readOnly" : false
          },
          "created" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : false
          },
          "updated" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : false
          },
          "duration" : {
            "$ref" : "#/components/schemas/DurationValue",
            "readOnly" : false
          },
          "date" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : false
          },
          "issue" : {
            "$ref" : "#/components/schemas/Issue",
            "readOnly" : true
          },
          "usesMarkdown" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a work item in an issue.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "JabberSettings" : {
        "type" : "object",
        "properties" : {
          "isEnabled" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "host" : {
            "type" : "string",
            "readOnly" : false
          },
          "port" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : false
          },
          "login" : {
            "type" : "string",
            "readOnly" : false
          },
          "serviceName" : {
            "type" : "string",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents jabber settings for this YouTrack installation.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "License" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "readOnly" : false
          },
          "license" : {
            "type" : "string",
            "readOnly" : false
          },
          "error" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the current license of the YouTrack service.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "LimitedVisibility" : {
        "description" : "Represents visibility limited to several users and/or groups.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Visibility"
        }, {
          "type" : "object",
          "properties" : {
            "permittedGroups" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            },
            "permittedUsers" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        } ]
      },
      "LinksActivityItem" : {
        "description" : "Represents a change in the `issues` attribute of an IssueLink entity.\nThat is, each issue has the `links` attribute that contains an array of IssueLink entities.\nEach of them represents a link between the target issue and a collection of issues.\nFor example, a set of issues to which the target one is linked as \"Duplicated by\".\nThe change in the list of these issues is represented by `LinksActivityItem` entity.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultiValueActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/Issue",
              "readOnly" : true
            },
            "removed" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/Issue"
              }
            },
            "added" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          }
        } ]
      },
      "LocaleDescriptor" : {
        "type" : "object",
        "properties" : {
          "locale" : {
            "type" : "string",
            "readOnly" : true
          },
          "language" : {
            "type" : "string",
            "readOnly" : true
          },
          "community" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a language locale that is used in UI.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "LocaleSettings" : {
        "type" : "object",
        "properties" : {
          "locale" : {
            "$ref" : "#/components/schemas/LocaleDescriptor",
            "readOnly" : false
          },
          "isRTL" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the System Language settings.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "LocalizableBundleElement" : {
        "description" : "Represents field value that can be localized.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleElement"
        }, {
          "type" : "object",
          "properties" : {
            "localizedName" : {
              "type" : "string",
              "readOnly" : false
            }
          }
        } ]
      },
      "Logo" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Company logo that is used in YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "Me" : {
        "description" : "Represents the currently logged in user in YouTrack.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/User"
        } ]
      },
      "MultiBuildIssueCustomField" : {
        "description" : "Represents the issue custom field of the `build` type that can have multiple values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseMultiValueIssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/BuildBundleElement"
              }
            }
          }
        } ]
      },
      "MultiEnumIssueCustomField" : {
        "description" : "Represents the issue custom field of the `enum` type that can have multiple values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseMultiValueIssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/EnumBundleElement"
              }
            }
          }
        } ]
      },
      "MultiGroupIssueCustomField" : {
        "description" : "Represents the issue custom field of the `group` type that can have multiple values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseMultiValueIssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            }
          }
        } ]
      },
      "MultiOwnedIssueCustomField" : {
        "description" : "Represents the issue custom field of the `ownedField` type that can have multiple values. The predefined Subsystem field is the example of the owned fields.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseMultiValueIssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/OwnedBundleElement"
              }
            }
          }
        } ]
      },
      "MultiUserIssueCustomField" : {
        "description" : "Represents the issue custom field of the `user` type that can have multiple values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseMultiValueIssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        } ]
      },
      "MultiValueActivityItem" : {
        "description" : "Represents a change in an entity attribute that has type of `Array of &lt;Entities&gt;`.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ActivityItem"
        } ]
      },
      "DatabaseMultiValueIssueCustomField" : {
        "description" : "Represents the all custom fields that may have multiple values in the issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "projectCustomField" : {
              "$ref" : "#/components/schemas/ProjectCustomField",
              "readOnly" : true
            },
            "value" : {
              "type" : "object",
              "readOnly" : true
            }
          }
        } ]
      },
      "MultiVersionIssueCustomField" : {
        "description" : "Represents the issue custom field of the `version` type that can have multiple values.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseMultiValueIssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/VersionBundleElement"
              }
            }
          }
        } ]
      },
      "NotificationSettings" : {
        "type" : "object",
        "properties" : {
          "emailSettings" : {
            "$ref" : "#/components/schemas/EmailSettings",
            "readOnly" : true
          },
          "jabberSettings" : {
            "$ref" : "#/components/schemas/JabberSettings",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the Notifications settings of the YouTrack service.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "NotificationsUserProfile" : {
        "type" : "object",
        "properties" : {
          "notifyOnOwnChanges" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "jabberNotificationsEnabled" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "emailNotificationsEnabled" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "mentionNotificationsEnabled" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "duplicateClusterNotificationsEnabled" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "mailboxIntegrationNotificationsEnabled" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "usePlainTextEmails" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "autoWatchOnComment" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "autoWatchOnCreate" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "autoWatchOnVote" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "autoWatchOnUpdate" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the notification settings in the profile of the specific user.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "OnlineUsers" : {
        "type" : "object",
        "properties" : {
          "users" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Stores number of online user.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "OwnedBundle" : {
        "description" : "Represents a set of owned values in YouTrack.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseBundle"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/OwnedBundleElement"
              }
            }
          }
        } ]
      },
      "OwnedBundleCustomFieldDefaults" : {
        "description" : "Default settings for the owned-type field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleCustomFieldDefaults"
        }, {
          "type" : "object",
          "properties" : {
            "bundle" : {
              "$ref" : "#/components/schemas/OwnedBundle",
              "readOnly" : false
            },
            "defaultValues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/OwnedBundleElement"
              }
            }
          }
        } ]
      },
      "OwnedBundleElement" : {
        "description" : "Represents a single owned value of a set. For example, a subsystem.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleElement"
        }, {
          "type" : "object",
          "properties" : {
            "owner" : {
              "$ref" : "#/components/schemas/User",
              "readOnly" : false
            }
          }
        } ]
      },
      "OwnedProjectCustomField" : {
        "description" : "Represents project settings for the owned field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleProjectCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "bundle" : {
              "$ref" : "#/components/schemas/OwnedBundle",
              "readOnly" : false
            },
            "defaultValues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/OwnedBundleElement"
              }
            }
          }
        } ]
      },
      "ParsedCommand" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "error" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "delete" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the command that was parsed from the provided query.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "PeriodFieldFormat" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the format, in which the period values are displayed to the user.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "PeriodIssueCustomField" : {
        "description" : "Represents the period field in the issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/PeriodValue",
              "readOnly" : false
            }
          }
        } ]
      },
      "PeriodProjectCustomField" : {
        "description" : "Represents project settings for the period field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectCustomField"
        } ]
      },
      "PeriodValue" : {
        "type" : "object",
        "properties" : {
          "minutes" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "presentation" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the period field value.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "PredefinedFilterField" : {
        "description" : "Represents a predefined field of the issue. Predefined fields are always present in an issue and\n            |cannot be customized in a project. For example, `project`, `created`,\n            |`updated`, `tags`, and so on.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FilterField"
        } ]
      },
      "Project" : {
        "description" : "Represents a YouTrack project.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueFolder"
        }, {
          "type" : "object",
          "properties" : {
            "startingNumber" : {
              "type" : "integer",
              "format" : "int64",
              "readOnly" : false
            },
            "shortName" : {
              "type" : "string",
              "readOnly" : false
            },
            "description" : {
              "type" : "string",
              "readOnly" : false
            },
            "leader" : {
              "$ref" : "#/components/schemas/User",
              "readOnly" : false
            },
            "createdBy" : {
              "$ref" : "#/components/schemas/User",
              "readOnly" : false
            },
            "issues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/Issue"
              }
            },
            "customFields" : {
              "type" : "object",
              "readOnly" : true
            },
            "archived" : {
              "type" : "boolean",
              "readOnly" : false
            },
            "fromEmail" : {
              "type" : "string",
              "readOnly" : false
            },
            "replyToEmail" : {
              "type" : "string",
              "readOnly" : false
            },
            "template" : {
              "type" : "boolean",
              "readOnly" : false
            },
            "iconUrl" : {
              "type" : "string",
              "readOnly" : true
            },
            "team" : {
              "$ref" : "#/components/schemas/UserGroup",
              "readOnly" : true
            }
          }
        } ]
      },
      "ProjectActivityItem" : {
        "description" : "Represents the change in the project attribute on an Issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SingleValueActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/Issue",
              "readOnly" : true
            },
            "removed" : {
              "type" : "object",
              "readOnly" : true
            },
            "added" : {
              "type" : "object",
              "readOnly" : true
            }
          }
        } ]
      },
      "ProjectBasedColorCoding" : {
        "description" : "Lets you set a color for a card based on its project.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ColorCoding"
        }, {
          "type" : "object",
          "properties" : {
            "projectColors" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/ProjectColor"
              }
            }
          }
        } ]
      },
      "ProjectColor" : {
        "type" : "object",
        "properties" : {
          "project" : {
            "$ref" : "#/components/schemas/Project",
            "readOnly" : true
          },
          "color" : {
            "$ref" : "#/components/schemas/FieldStyle",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents color setting for one project on the board.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "ProjectCustomField" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "$ref" : "#/components/schemas/CustomField",
            "readOnly" : true
          },
          "project" : {
            "$ref" : "#/components/schemas/Project",
            "readOnly" : true
          },
          "canBeEmpty" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "emptyFieldText" : {
            "type" : "string",
            "readOnly" : false
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : false
          },
          "isPublic" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "hasRunningJob" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents custom field settings for the particular project.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "ProjectTimeTrackingSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "estimate" : {
            "$ref" : "#/components/schemas/ProjectCustomField",
            "readOnly" : false
          },
          "timeSpent" : {
            "$ref" : "#/components/schemas/ProjectCustomField",
            "readOnly" : false
          },
          "workItemTypes" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/WorkItemType"
            }
          },
          "project" : {
            "$ref" : "#/components/schemas/Project",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents time tracking settings of the project.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "RestCorsSettings" : {
        "type" : "object",
        "properties" : {
          "allowedOrigins" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "type" : "string"
            }
          },
          "allowAllOrigins" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the Resource Sharing (CORS) configuration of the service.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "SavedQuery" : {
        "description" : "Represents a saved search.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/WatchFolder"
        }, {
          "type" : "object",
          "properties" : {
            "query" : {
              "type" : "string",
              "readOnly" : false
            },
            "issues" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/Issue"
              }
            }
          }
        } ]
      },
      "SearchSuggestions" : {
        "type" : "object",
        "properties" : {
          "caret" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : false
          },
          "ignoreUnresolvedSetting" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "query" : {
            "type" : "string",
            "readOnly" : false
          },
          "suggestions" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Suggestion"
            }
          },
          "folders" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/IssueFolder"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the list of search suggestions for the currently entered search query.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "SimpleIssueCustomField" : {
        "description" : "Represents the field of simple type in the issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "projectCustomField" : {
              "$ref" : "#/components/schemas/ProjectCustomField",
              "readOnly" : true
            },
            "value" : {
              "type" : "object",
              "readOnly" : true
            }
          }
        } ]
      },
      "SimpleProjectCustomField" : {
        "description" : "Represents project settings for fields of types integer, float, date, date and time, string.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectCustomField"
        } ]
      },
      "SimpleValueActivityItem" : {
        "description" : "Represents the change in attributes of a simple type in the target entity:\nIssue, IssueComment, WorkItem, IssueAttachment.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SingleValueActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "removed" : {
              "type" : "object",
              "readOnly" : true
            },
            "added" : {
              "type" : "object",
              "readOnly" : true
            }
          }
        } ]
      },
      "SingleBuildIssueCustomField" : {
        "description" : "Represents the issue custom field of the `build` type that can only have a single value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseSingleValueIssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/BuildBundleElement",
              "readOnly" : false
            }
          }
        } ]
      },
      "SingleEnumIssueCustomField" : {
        "description" : "Represents the issue custom field of the `enum` type that can only have a single value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseSingleValueIssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/EnumBundleElement",
              "readOnly" : false
            }
          }
        } ]
      },
      "SingleGroupIssueCustomField" : {
        "description" : "Represents the issue custom field of the `group` type that can only have a single value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseSingleValueIssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/UserGroup",
              "readOnly" : false
            }
          }
        } ]
      },
      "SingleOwnedIssueCustomField" : {
        "description" : "Represents the issue custom field of the `ownedField` type that can only have a single value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseSingleValueIssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/OwnedBundleElement",
              "readOnly" : false
            }
          }
        } ]
      },
      "SingleUserIssueCustomField" : {
        "description" : "Represents the issue custom field of the `user` type that can only have a single value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseSingleValueIssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/User",
              "readOnly" : false
            }
          }
        } ]
      },
      "SingleValueActivityItem" : {
        "description" : "Describe change of properties that can have single value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ActivityItem"
        } ]
      },
      "DatabaseSingleValueIssueCustomField" : {
        "description" : "Represents the all fields of with a single value in the issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "projectCustomField" : {
              "$ref" : "#/components/schemas/ProjectCustomField",
              "readOnly" : true
            },
            "value" : {
              "type" : "object",
              "readOnly" : true
            }
          }
        } ]
      },
      "SingleVersionIssueCustomField" : {
        "description" : "Represents the issue custom field of the `version` type that can only have a single value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseSingleValueIssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/VersionBundleElement",
              "readOnly" : false
            }
          }
        } ]
      },
      "Sprint" : {
        "type" : "object",
        "properties" : {
          "agile" : {
            "$ref" : "#/components/schemas/Agile",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "readOnly" : false
          },
          "goal" : {
            "type" : "string",
            "readOnly" : false
          },
          "start" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : false
          },
          "finish" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : false
          },
          "archived" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "isDefault" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "issues" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "$ref" : "#/components/schemas/Issue"
            }
          },
          "unresolvedIssuesCount" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "previousSprint" : {
            "$ref" : "#/components/schemas/Sprint",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a sprint that is associated with an agile board. Each sprint can include issues from one or more projects.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "SprintActivityItem" : {
        "description" : "Represents a change in the issue when it was added to or removed from an agile board sprint.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultiValueActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/Issue",
              "readOnly" : true
            },
            "removed" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/Sprint"
              }
            },
            "added" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/Sprint"
              }
            }
          }
        } ]
      },
      "SprintsSettings" : {
        "type" : "object",
        "properties" : {
          "isExplicit" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "cardOnSeveralSprints" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "defaultSprint" : {
            "$ref" : "#/components/schemas/Sprint",
            "readOnly" : false
          },
          "disableSprints" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "explicitQuery" : {
            "type" : "string",
            "readOnly" : false
          },
          "sprintSyncField" : {
            "$ref" : "#/components/schemas/CustomField",
            "readOnly" : false
          },
          "hideSubtasksOfCards" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Describes sprints configuration.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "StateBundle" : {
        "description" : "Represents a set of states in YouTrack.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseBundle"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/StateBundleElement"
              }
            }
          }
        } ]
      },
      "StateBundleCustomFieldDefaults" : {
        "description" : "Default settings for the state-type field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleCustomFieldDefaults"
        }, {
          "type" : "object",
          "properties" : {
            "bundle" : {
              "$ref" : "#/components/schemas/StateBundle",
              "readOnly" : false
            },
            "defaultValues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/StateBundleElement"
              }
            }
          }
        } ]
      },
      "StateBundleElement" : {
        "description" : "Represents the state of an issue in YouTrack.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/LocalizableBundleElement"
        }, {
          "type" : "object",
          "properties" : {
            "isResolved" : {
              "type" : "boolean",
              "readOnly" : false
            }
          }
        } ]
      },
      "StateIssueCustomField" : {
        "description" : "Represents the issue field of the `state` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseSingleValueIssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/StateBundleElement",
              "readOnly" : false
            }
          }
        } ]
      },
      "StateProjectCustomField" : {
        "description" : "Represents project settings for the state field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleProjectCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "bundle" : {
              "$ref" : "#/components/schemas/StateBundle",
              "readOnly" : false
            },
            "defaultValues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/StateBundleElement"
              }
            }
          }
        } ]
      },
      "StorageEntry" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "SSL key representation.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "Suggestion" : {
        "type" : "object",
        "properties" : {
          "completionStart" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "completionEnd" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "matchingStart" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "matchingEnd" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "caret" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "option" : {
            "type" : "string",
            "readOnly" : true
          },
          "prefix" : {
            "type" : "string",
            "readOnly" : true
          },
          "suffix" : {
            "type" : "string",
            "readOnly" : true
          },
          "group" : {
            "type" : "string",
            "readOnly" : true
          },
          "icon" : {
            "type" : "string",
            "readOnly" : true
          },
          "auxiliaryIcon" : {
            "type" : "string",
            "readOnly" : true
          },
          "className" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents query suggestion.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "SwimlaneEntityAttributeValue" : {
        "description" : "Represents a single swimlane in case of AttributeBasedSwimlaneSettings.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DatabaseAttributeValue"
        }, {
          "type" : "object",
          "properties" : {
            "name" : {
              "type" : "string",
              "readOnly" : false
            },
            "isResolved" : {
              "type" : "boolean",
              "readOnly" : true
            }
          }
        } ]
      },
      "SwimlaneSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Base entity for different swimlane settings",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "SwimlaneValue" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents single swimlane in case of IssueBasedSwimlaneSettings.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "SystemSettings" : {
        "type" : "object",
        "properties" : {
          "baseUrl" : {
            "type" : "string",
            "readOnly" : false
          },
          "maxUploadFileSize" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : false
          },
          "maxExportItems" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : false
          },
          "administratorEmail" : {
            "type" : "string",
            "readOnly" : false
          },
          "allowStatisticsCollection" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "isApplicationReadOnly" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents the System settings that affect core functionality of YouTrack.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "TagsActivityItem" : {
        "description" : "Represents a change in the list of tags of an issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultiValueActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/Issue",
              "readOnly" : true
            },
            "removed" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/IssueTag"
              }
            },
            "added" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/IssueTag"
              }
            }
          }
        } ]
      },
      "Telemetry" : {
        "type" : "object",
        "properties" : {
          "installationFolder" : {
            "type" : "string",
            "readOnly" : true
          },
          "databaseLocation" : {
            "type" : "string",
            "readOnly" : true
          },
          "logsLocation" : {
            "type" : "string",
            "readOnly" : true
          },
          "availableProcessors" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "availableMemory" : {
            "type" : "string",
            "readOnly" : true
          },
          "allocatedMemory" : {
            "type" : "string",
            "readOnly" : true
          },
          "usedMemory" : {
            "type" : "string",
            "readOnly" : true
          },
          "uptime" : {
            "type" : "string",
            "readOnly" : true
          },
          "startedTime" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "databaseBackgroundThreads" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "pendingAsyncJobs" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "cachedResultsCountInDBQueriesCache" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "databaseQueriesCacheHitRate" : {
            "type" : "string",
            "readOnly" : true
          },
          "blobStringsCacheHitRate" : {
            "type" : "string",
            "readOnly" : true
          },
          "totalTransactions" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "transactionsPerSecond" : {
            "type" : "string",
            "readOnly" : true
          },
          "requestsPerSecond" : {
            "type" : "string",
            "readOnly" : true
          },
          "databaseSize" : {
            "type" : "string",
            "readOnly" : true
          },
          "fullDatabaseSize" : {
            "type" : "string",
            "readOnly" : true
          },
          "textIndexSize" : {
            "type" : "string",
            "readOnly" : true
          },
          "onlineUsers" : {
            "$ref" : "#/components/schemas/OnlineUsers",
            "readOnly" : true
          },
          "reportCalculatorThreads" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "notificationAnalyzerThreads" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Telemetry data of the YouTrack installation.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "TextCustomFieldActivityItem" : {
        "description" : "Represents an activity that affects a custom field of the `text` type of an issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CustomFieldActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/Issue",
              "readOnly" : true
            },
            "removed" : {
              "type" : "string",
              "readOnly" : true
            },
            "added" : {
              "type" : "string",
              "readOnly" : true
            },
            "markup" : {
              "type" : "string",
              "readOnly" : true
            }
          }
        } ]
      },
      "TextFieldValue" : {
        "type" : "object",
        "properties" : {
          "text" : {
            "type" : "string",
            "readOnly" : true
          },
          "markdownText" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a value of the text field. Returns both source and rendered text.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "TextIssueCustomField" : {
        "description" : "Represents the issue custom field of the `text` type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/TextFieldValue",
              "readOnly" : false
            }
          }
        } ]
      },
      "TextMarkupActivityItem" : {
        "description" : "Represents a change in a `String`-type attribute with the support of markup:\n`description` in an Issue or IssueWorkItem, and the `text` of the IssueComment.\nThis entity lets you get the rendered text after the change.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SimpleValueActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "removed" : {
              "type" : "string",
              "readOnly" : true
            },
            "added" : {
              "type" : "string",
              "readOnly" : true
            },
            "markup" : {
              "type" : "string",
              "readOnly" : true
            }
          }
        } ]
      },
      "TextProjectCustomField" : {
        "description" : "Represents settings of the text-type field in the project.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SimpleProjectCustomField"
        } ]
      },
      "TimeTrackingUserProfile" : {
        "type" : "object",
        "properties" : {
          "periodFormat" : {
            "$ref" : "#/components/schemas/PeriodFieldFormat",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents time tracking settings in the user's profile.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "TimeZoneDescriptor" : {
        "type" : "object",
        "properties" : {
          "presentation" : {
            "type" : "string",
            "readOnly" : true
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a time zone.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "UnlimitedVisibility" : {
        "description" : "Represents unlimited visibility.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Visibility"
        } ]
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "login" : {
            "type" : "string",
            "readOnly" : true
          },
          "fullName" : {
            "type" : "string",
            "readOnly" : true
          },
          "email" : {
            "type" : "string",
            "readOnly" : true
          },
          "jabberAccountName" : {
            "type" : "string",
            "readOnly" : true
          },
          "ringId" : {
            "type" : "string",
            "readOnly" : true
          },
          "guest" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "online" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "banned" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "tags" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IssueTag"
            }
          },
          "savedQueries" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/SavedQuery"
            }
          },
          "avatarUrl" : {
            "type" : "string",
            "readOnly" : true
          },
          "profiles" : {
            "$ref" : "#/components/schemas/UserProfiles",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a user in YouTrack. Please note that the read-only properties of a user account, like \n            credentials, or email and so on, you can only change in  \n            <a href=\"https://www.jetbrains.com/help/youtrack/devportal/?Hub-REST-API\">Hub REST API</a>.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "UserBundle" : {
        "description" : "Represents a set of values that contains users. You can add to the set both individual user accounts and groups of users.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Bundle"
        }, {
          "type" : "object",
          "properties" : {
            "groups" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            },
            "individuals" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "aggregatedUsers" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        } ]
      },
      "UserCustomFieldDefaults" : {
        "description" : "Represents default settings for the user-type field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CustomFieldDefaults"
        }, {
          "type" : "object",
          "properties" : {
            "bundle" : {
              "$ref" : "#/components/schemas/UserBundle",
              "readOnly" : false
            },
            "defaultValues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        } ]
      },
      "UserGroup" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "ringId" : {
            "type" : "string",
            "readOnly" : true
          },
          "usersCount" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true
          },
          "icon" : {
            "type" : "string",
            "readOnly" : true
          },
          "allUsersGroup" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "teamForProject" : {
            "$ref" : "#/components/schemas/Project",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a group of users.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "UserProfiles" : {
        "type" : "object",
        "properties" : {
          "general" : {
            "$ref" : "#/components/schemas/GeneralUserProfile",
            "readOnly" : true
          },
          "notifications" : {
            "$ref" : "#/components/schemas/NotificationsUserProfile",
            "readOnly" : true
          },
          "timetracking" : {
            "$ref" : "#/components/schemas/TimeTrackingUserProfile",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "UserProjectCustomField" : {
        "description" : "Represents project settings for the user field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleProjectCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "bundle" : {
              "$ref" : "#/components/schemas/UserBundle",
              "readOnly" : false
            },
            "defaultValues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        } ]
      },
      "UsesMarkupActivityItem" : {
        "description" : "Represents the change of the boolean flag that indicates whether YouTrack Wiki or Markdown\nis used in the target entity as a markup language. If \"true\", then the markdown is used.\nOtherwise, YouTrack Wiki markup.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SimpleValueActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "removed" : {
              "type" : "boolean",
              "readOnly" : true
            },
            "added" : {
              "type" : "boolean",
              "readOnly" : true
            },
            "markup" : {
              "type" : "string",
              "readOnly" : true
            }
          }
        } ]
      },
      "VcsChangeActivityItem" : {
        "description" : "Represents an update in the list of VCSChanges of an issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatedDeletedActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "removed" : {
              "type" : "object",
              "readOnly" : true
            },
            "added" : {
              "type" : "object",
              "readOnly" : true
            },
            "author" : {
              "$ref" : "#/components/schemas/User",
              "readOnly" : true
            }
          }
        } ]
      },
      "VcsUnresolvedUser" : {
        "description" : "Represents an author of a VCS change that could not be found in the list of YouTrack users.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/User"
        }, {
          "type" : "object",
          "properties" : {
            "name" : {
              "type" : "string",
              "readOnly" : true
            }
          }
        } ]
      },
      "VersionBundle" : {
        "description" : "Represents a set of versions in YouTrack.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseBundle"
        }, {
          "type" : "object",
          "properties" : {
            "values" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/VersionBundleElement"
              }
            }
          }
        } ]
      },
      "VersionBundleCustomFieldDefaults" : {
        "description" : "Default settings for the version-type field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleCustomFieldDefaults"
        }, {
          "type" : "object",
          "properties" : {
            "bundle" : {
              "$ref" : "#/components/schemas/VersionBundle",
              "readOnly" : false
            },
            "defaultValues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/VersionBundleElement"
              }
            }
          }
        } ]
      },
      "VersionBundleElement" : {
        "description" : "Represents a version in YouTrack.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleElement"
        }, {
          "type" : "object",
          "properties" : {
            "archived" : {
              "type" : "boolean",
              "readOnly" : false
            },
            "releaseDate" : {
              "type" : "integer",
              "format" : "int64",
              "readOnly" : false
            },
            "released" : {
              "type" : "boolean",
              "readOnly" : false
            }
          }
        } ]
      },
      "VersionProjectCustomField" : {
        "description" : "Represents project settings for the version field.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BundleProjectCustomField"
        }, {
          "type" : "object",
          "properties" : {
            "bundle" : {
              "$ref" : "#/components/schemas/VersionBundle",
              "readOnly" : false
            },
            "defaultValues" : {
              "type" : "array",
              "readOnly" : false,
              "items" : {
                "$ref" : "#/components/schemas/VersionBundleElement"
              }
            }
          }
        } ]
      },
      "Visibility" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Describes visibility settings for an entity (issue, comment, etc.)",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "VisibilityActivityItem" : {
        "description" : "Represents the changes of properties responsible for visibility restriction.\nCan be <a href=\"api-entity-VisibilityGroupActivityItem.xml\">VisibilityGroupActivityItem</a> or <a href=\"api-entity-VisibilityUserActivityItem.xml\">VisibilityUserActivityItem</a>",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultiValueActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "targetMember" : {
              "type" : "string",
              "readOnly" : true
            }
          }
        } ]
      },
      "VisibilityGroupActivityItem" : {
        "description" : "Represents the event when a user adds or removes a group to/from the Visibility settings of the target entity.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/VisibilityActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "targetMember" : {
              "type" : "string",
              "readOnly" : true
            },
            "targetSubMember" : {
              "type" : "string",
              "readOnly" : true
            },
            "removed" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            },
            "added" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/UserGroup"
              }
            }
          }
        } ]
      },
      "VisibilityUserActivityItem" : {
        "description" : "Represents the event when a user adds or removes a user to/from the Visibility settings of the target entity.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/VisibilityActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "targetMember" : {
              "type" : "string",
              "readOnly" : true
            },
            "targetSubMember" : {
              "type" : "string",
              "readOnly" : true
            },
            "removed" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "added" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        } ]
      },
      "VotersActivityItem" : {
        "description" : "Represents a change in the list of voters of an issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultiValueActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/Issue",
              "readOnly" : true
            },
            "removed" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "added" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        } ]
      },
      "WIPLimit" : {
        "type" : "object",
        "properties" : {
          "max" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : false
          },
          "min" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : false
          },
          "column" : {
            "$ref" : "#/components/schemas/AgileColumn",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents WIP limits for particular column. If they are not satisfied, the column will be highlighted in UI.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "WatchFolder" : {
        "description" : "A `WatchFolder` is an `IssueFolder` that let you enable notifications for a set \nof issues that it enfolds. It is a common abstract ancestor for saved searches and issue tags.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/IssueFolder"
        }, {
          "type" : "object",
          "properties" : {
            "owner" : {
              "$ref" : "#/components/schemas/User",
              "readOnly" : true
            },
            "visibleFor" : {
              "$ref" : "#/components/schemas/UserGroup",
              "readOnly" : false
            },
            "updateableBy" : {
              "$ref" : "#/components/schemas/UserGroup",
              "readOnly" : false
            }
          }
        } ]
      },
      "WorkItemActivityItem" : {
        "description" : "Represents a change in a list of work items in an issue.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CreatedDeletedActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/IssueWorkItem",
              "readOnly" : true
            },
            "removed" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/IssueWorkItem"
              }
            },
            "added" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/IssueWorkItem"
              }
            }
          }
        } ]
      },
      "WorkItemAuthorActivityItem" : {
        "description" : "Represents a change in the `author` attribute of a work item.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SingleValueActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/IssueWorkItem",
              "readOnly" : true
            },
            "removed" : {
              "$ref" : "#/components/schemas/User",
              "readOnly" : true
            },
            "added" : {
              "$ref" : "#/components/schemas/User",
              "readOnly" : true
            }
          }
        } ]
      },
      "WorkItemDurationActivityItem" : {
        "description" : "Represents a change in the `duration` attribute of a work item.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SingleValueActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/IssueWorkItem",
              "readOnly" : true
            },
            "removed" : {
              "$ref" : "#/components/schemas/DurationValue",
              "readOnly" : true
            },
            "added" : {
              "$ref" : "#/components/schemas/DurationValue",
              "readOnly" : true
            }
          }
        } ]
      },
      "WorkItemType" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : false
          },
          "autoAttached" : {
            "type" : "boolean",
            "readOnly" : false
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Represents a work type that can be assigned to a work item.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      },
      "WorkItemTypeActivityItem" : {
        "description" : "Represents a change in the `type` attribute of the work item.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MultiValueActivityItem"
        }, {
          "type" : "object",
          "properties" : {
            "target" : {
              "$ref" : "#/components/schemas/IssueWorkItem",
              "readOnly" : true
            },
            "removed" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/WorkItemType"
              }
            },
            "added" : {
              "type" : "array",
              "readOnly" : true,
              "items" : {
                "$ref" : "#/components/schemas/WorkItemType"
              }
            }
          }
        } ]
      },
      "WorkTimeSettings" : {
        "type" : "object",
        "properties" : {
          "minutesADay" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : false
          },
          "workDays" : {
            "type" : "array",
            "readOnly" : false,
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "firstDayOfWeek" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "daysAWeek" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "$type" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : "Work schedule settings.",
        "discriminator" : {
          "propertyName" : "$type"
        }
      }
    },
    "securitySchemes" : {
      "permanentToken" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "YouTrack permanent token"
      }
    }
  }
}
